<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--1.配置需要扫描的包-->
    <context:component-scan base-package="com.wgy">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--2.配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--最小连接数-->
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <!--最大连接数-->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <!--最大空闲时间，单位是秒，无用的链接过时后会被回收-->
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <!--数据库连接池初始化时获取的连接数-->
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <!--当连接数耗尽的时候，一次获取的新的连接数-->
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
        <!--每隔1800s检查数据库空闲连接-->
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
        <!--当数据库连接失败以后尝试重新连接的次数-->
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
    </bean>

    <!--3.mybatis和spring整合-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--连接数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--指定mybatis路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--配置xml的路径-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--配置扫描器，将mybatis接口实现到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口-->
        <property name="basePackage" value="com.wgy.shop.dao"/>
    </bean>

    <!--配置事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启基于注解的事务-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="txPoint" expression="execution(* com.wgy.shop.service..*(..))"/>
        <!--配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--* 代表这个切入点切入的所有方法都是事务方法-->
            <tx:method name="*"/>
            <!--以get开始的所有方法,配置优化-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>